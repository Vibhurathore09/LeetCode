class Solution {
    public boolean backspaceCompare(String s, String t) {
        Stack<Character> st1 = new Stack<>();
        Stack<Character> st2 = new Stack<>();
        s.toLowerCase();
        t.toLowerCase();
        // System.out.println(s+" "+t);
        for(int i = 0 ; i < s.length() ; i++){
            char c = s.charAt(i);
            if(c >= 'a' && c <='z'){
                st1.push(c);
            }else if(c == '#' && st1.size() > 0){
                st1.pop();
            }
        }
        for(int i = 0 ; i < t.length() ; i++){
            char c = t.charAt(i);
            if(c >= 'a' && c <='z'){
                st2.push(c);
            }else if(c == '#' && st2.size() > 0){
                st2.pop();
            }
        }
        // System.out.println(st1 +" "+st2);
        if(isSameStack(st1 ,st2)){
            return true;
        }else{
            return false;
        }
    }
    static boolean isSameStack(Stack<Character> stack1,Stack<Character> stack2)
    {
        boolean flag = true;
        if (stack1.size() != stack2.size())
        {
            flag = false;
            return flag;
        }
        while (stack1.empty() == false)
        {

            if (stack1.peek() == stack2.peek())
            {
            // Pop top of both stacks
                stack1.pop();
                stack2.pop();
            }
            else
            {
                flag = false;
                break;
            }
        }
 
       return flag;
    }
}
