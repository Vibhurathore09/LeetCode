class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        ArrayList<Integer> result=new ArrayList<>();
        int r = matrix.length;
        int c = matrix[0].length;
        int rowBegin=0, colBegin=0;
        int rowEnd=r-1, colEnd=c-1;
        while(rowBegin<=rowEnd && colBegin<=colEnd){
        	// traverse right (first row)
            for(int i=colBegin;i<=colEnd;i++){
                result.add(matrix[rowBegin][i]);
            }
            rowBegin++;
            // traverse down (last col)
            for(int i=rowBegin;i<=rowEnd;i++){
                result.add(matrix[i][colEnd]);
            }
            colEnd--;
            // check if more row/col traverse needed            
            if(rowBegin>rowEnd || colBegin>colEnd){
                return result;
            }
            // traverse left (last row)
            for(int i=colEnd;i>=colBegin;i--){
                result.add(matrix[rowEnd][i]);
            }
            rowEnd--;
            // traverse up (first column)
            for(int i=rowEnd;i>=rowBegin;i--){
                result.add(matrix[i][colBegin]);
            }
            colBegin++;
            
        }
        return result;
    }
}
